<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="32333" started-at="2020-10-09T13:27:06Z" finished-at="2020-10-09T13:27:39Z">
    <groups>
    </groups>
    <test name="samsung" duration-ms="32333" started-at="2020-10-09T13:27:06Z" finished-at="2020-10-09T13:27:39Z">
      <class name="com.qa.tests.LoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="beforeSuite" is-config="true" duration-ms="3386" started-at="2020-10-09T17:27:03Z" finished-at="2020-10-09T17:27:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="beforeTest" is-config="true" duration-ms="14434" started-at="2020-10-09T17:27:06Z" finished-at="2020-10-09T17:27:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PIXEL_2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10002]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11002]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="beforeClass" is-config="true" duration-ms="3639" started-at="2020-10-09T17:27:21Z" finished-at="2020-10-09T17:27:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="beforeMethod" is-config="true" duration-ms="160" started-at="2020-10-09T17:27:24Z" finished-at="2020-10-09T17:27:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="invalidPassword" duration-ms="5478" started-at="2020-10-09T17:27:25Z" finished-at="2020-10-09T17:27:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-10-09T17:27:30Z" finished-at="2020-10-09T17:27:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-10-09T17:27:30Z" finished-at="2020-10-09T17:27:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.invalidUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="invalidUserName" duration-ms="3457" started-at="2020-10-09T17:27:30Z" finished-at="2020-10-09T17:27:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-10-09T17:27:34Z" finished-at="2020-10-09T17:27:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-09T17:27:34Z" finished-at="2020-10-09T17:27:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="successfulLogin" duration-ms="4592" started-at="2020-10-09T17:27:34Z" finished-at="2020-10-09T17:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-10-09T17:27:38Z" finished-at="2020-10-09T17:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-09T17:27:38Z" finished-at="2020-10-09T17:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="afterTest" is-config="true" duration-ms="552" started-at="2020-10-09T17:27:38Z" finished-at="2020-10-09T17:27:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTest@7e0b0338]" name="afterSuite" is-config="true" duration-ms="2074" started-at="2020-10-09T17:27:39Z" finished-at="2020-10-09T17:27:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTest -->
    </test> <!-- samsung -->
  </suite> <!-- Suite -->
</testng-results>
