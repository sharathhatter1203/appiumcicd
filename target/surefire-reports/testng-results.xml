<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="8" total="16" passed="6">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-34-19/ProductTest/validateProductOnProductsDetailPage.png'> <img src='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-34-19/ProductTest/validateProductOnProductsDetailPage.png' height='300' width='300'/> </a>]]>
    </line>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-35-21/ProductTest/validateProductOnProductsDetailPage.png'> <img src='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-35-21/ProductTest/validateProductOnProductsDetailPage.png' height='300' width='300'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="60812" started-at="2020-10-03T05:34:19Z" finished-at="2020-10-03T05:35:20Z">
    <groups>
    </groups>
    <test name="samsung" duration-ms="60812" started-at="2020-10-03T05:34:19Z" finished-at="2020-10-03T05:35:20Z">
      <class name="com.qa.tests.ProductTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.tests.ProductTest@544fe44c]" name="beforeClass" is-config="true" duration-ms="3460" started-at="2020-10-03T09:34:53Z" finished-at="2020-10-03T09:34:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.ProductTest@544fe44c]" name="beforeMethod" is-config="true" duration-ms="5223" started-at="2020-10-03T09:34:56Z" finished-at="2020-10-03T09:35:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.ProductTest.validateProductOnProductsDetailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="validateProductOnProductsDetailPage()[pri:0, instance:com.qa.tests.ProductTest@544fe44c]" name="validateProductOnProductsDetailPage" duration-ms="15558" started-at="2020-10-03T09:35:01Z" finished-at="2020-10-03T09:35:17Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]}) (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]}) (tried for 10 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at com.qa.BaseTest.waitForVisibility(BaseTest.java:286)
	at com.qa.BaseTest.getAttribute(BaseTest.java:320)
	at com.qa.BaseTest.getText(BaseTest.java:329)
	at com.qa.pages.ProductDetailsPage.getPDPText(ProductDetailsPage.java:39)
	at com.qa.tests.ProductTest.validateProductOnProductsDetailPage(ProductTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]})
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
	at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
	at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.isDisplayed(<generated>)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 25 more
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@1add2367 (tried for 1 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
	... 32 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro', ip: 'fe80:0:0:0:409:f385:3698:e765%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '1.8.0_221'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-34-19/ProductTest/validateProductOnProductsDetailPage.png'> <img src='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-34-19/ProductTest/validateProductOnProductsDetailPage.png' height='300' width='300'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProductOnProductsDetailPage -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.ProductTest@544fe44c]" name="afterMethod" is-config="true" duration-ms="1993" started-at="2020-10-03T09:35:18Z" finished-at="2020-10-03T09:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.tests.ProductTest@544fe44c]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-10-03T09:35:20Z" finished-at="2020-10-03T09:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.qa.tests.ProductTest -->
      <class name="com.qa.tests.LoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="beforeSuite" is-config="true" duration-ms="950" started-at="2020-10-03T09:34:18Z" finished-at="2020-10-03T09:34:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="beforeTest" is-config="true" duration-ms="15142" started-at="2020-10-03T09:34:19Z" finished-at="2020-10-03T09:34:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PIXEL_2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10002]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11002]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="beforeClass" is-config="true" duration-ms="4205" started-at="2020-10-03T09:34:35Z" finished-at="2020-10-03T09:34:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="beforeMethod" is-config="true" duration-ms="148" started-at="2020-10-03T09:34:39Z" finished-at="2020-10-03T09:34:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="invalidPassword" duration-ms="5472" started-at="2020-10-03T09:34:39Z" finished-at="2020-10-03T09:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:34:44Z" finished-at="2020-10-03T09:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-10-03T09:34:44Z" finished-at="2020-10-03T09:34:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.invalidUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="invalidUserName" duration-ms="3911" started-at="2020-10-03T09:34:44Z" finished-at="2020-10-03T09:34:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:34:48Z" finished-at="2020-10-03T09:34:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-10-03T09:34:48Z" finished-at="2020-10-03T09:34:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="successfulLogin" duration-ms="4334" started-at="2020-10-03T09:34:48Z" finished-at="2020-10-03T09:34:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:34:53Z" finished-at="2020-10-03T09:34:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-10-03T09:34:53Z" finished-at="2020-10-03T09:34:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="afterTest" is-config="true" duration-ms="560" started-at="2020-10-03T09:35:20Z" finished-at="2020-10-03T09:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTest@31dc339b]" name="afterSuite" is-config="true" duration-ms="1" started-at="2020-10-03T09:35:21Z" finished-at="2020-10-03T09:35:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTest -->
    </test> <!-- samsung -->
  </suite> <!-- Suite -->
  <suite name="Suite (0)" duration-ms="53010" started-at="2020-10-03T05:35:21Z" finished-at="2020-10-03T05:36:14Z">
    <groups>
    </groups>
    <test name="samsung" duration-ms="53010" started-at="2020-10-03T05:35:21Z" finished-at="2020-10-03T05:36:14Z">
      <class name="com.qa.tests.LoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="beforeSuite" is-config="true" duration-ms="6" started-at="2020-10-03T09:35:21Z" finished-at="2020-10-03T09:35:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="beforeTest" is-config="true" duration-ms="9155" started-at="2020-10-03T09:35:21Z" finished-at="2020-10-03T09:35:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PIXEL_2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10002]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11002]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="beforeClass" is-config="true" duration-ms="3218" started-at="2020-10-03T09:35:30Z" finished-at="2020-10-03T09:35:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-10-03T09:35:33Z" finished-at="2020-10-03T09:35:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="invalidPassword" duration-ms="5723" started-at="2020-10-03T09:35:33Z" finished-at="2020-10-03T09:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-10-03T09:35:39Z" finished-at="2020-10-03T09:35:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.invalidUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:35:39Z" finished-at="2020-10-03T09:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="invalidUserName" duration-ms="3829" started-at="2020-10-03T09:35:39Z" finished-at="2020-10-03T09:35:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:35:43Z" finished-at="2020-10-03T09:35:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:35:43Z" finished-at="2020-10-03T09:35:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="successfulLogin" duration-ms="4754" started-at="2020-10-03T09:35:43Z" finished-at="2020-10-03T09:35:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-10-03T09:35:47Z" finished-at="2020-10-03T09:35:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-03T09:35:47Z" finished-at="2020-10-03T09:35:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="afterTest" is-config="true" duration-ms="637" started-at="2020-10-03T09:36:13Z" finished-at="2020-10-03T09:36:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTest@5f9d02cb]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-10-03T09:36:14Z" finished-at="2020-10-03T09:36:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTest -->
      <class name="com.qa.tests.ProductTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.tests.ProductTest@63753b6d]" name="beforeClass" is-config="true" duration-ms="3345" started-at="2020-10-03T09:35:47Z" finished-at="2020-10-03T09:35:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.ProductTest@63753b6d]" name="beforeMethod" is-config="true" duration-ms="4755" started-at="2020-10-03T09:35:51Z" finished-at="2020-10-03T09:35:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.ProductTest.validateProductOnProductsDetailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="validateProductOnProductsDetailPage()[pri:0, instance:com.qa.tests.ProductTest@63753b6d]" name="validateProductOnProductsDetailPage" duration-ms="14906" started-at="2020-10-03T09:35:56Z" finished-at="2020-10-03T09:36:10Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]}) (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Located by By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]}) (tried for 10 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at com.qa.BaseTest.waitForVisibility(BaseTest.java:286)
	at com.qa.BaseTest.getAttribute(BaseTest.java:320)
	at com.qa.BaseTest.getText(BaseTest.java:329)
	at com.qa.pages.ProductDetailsPage.getPDPText(ProductDetailsPage.java:39)
	at com.qa.tests.ProductTest.validateProductOnProductsDetailPage(ProductTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]})
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
	at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
	at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.isDisplayed(<generated>)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 25 more
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@12affef (tried for 1 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
	... 32 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.xpath: //android.view.ViewGroup[@content-desc="test-Description"]/android.widget.TextView[2]})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro', ip: 'fe80:0:0:0:409:f385:3698:e765%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '1.8.0_221'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-35-21/ProductTest/validateProductOnProductsDetailPage.png'> <img src='/Users/sharathrudramuniyappa/eclipse-workspace/Parallel/Screenshots/Android_null_PIXEL_2/2020-10-03-09-35-21/ProductTest/validateProductOnProductsDetailPage.png' height='300' width='300'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProductOnProductsDetailPage -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.ProductTest@63753b6d]" name="afterMethod" is-config="true" duration-ms="2000" started-at="2020-10-03T09:36:11Z" finished-at="2020-10-03T09:36:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.tests.ProductTest@63753b6d]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-10-03T09:36:13Z" finished-at="2020-10-03T09:36:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.qa.tests.ProductTest -->
    </test> <!-- samsung -->
  </suite> <!-- Suite (0) -->
</testng-results>
